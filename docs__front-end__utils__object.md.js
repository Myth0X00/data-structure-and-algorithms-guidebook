(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[76],{DApo:function(e,n,a){"use strict";a.r(n);var t=a("q1tI"),r=a.n(t),c=(a("B2uJ"),a("+su7"),a("qOys")),l=a.n(c);a("5Yjd");n["default"]=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"markdown"},r.a.createElement("h1",{id:"\u5bf9\u8c61"},r.a.createElement("a",{"aria-hidden":"true",href:"#\u5bf9\u8c61"},r.a.createElement("span",{className:"icon icon-link"})),"\u5bf9\u8c61"),r.a.createElement("h2",{id:"\u6241\u5e73\u5316"},r.a.createElement("a",{"aria-hidden":"true",href:"#\u6241\u5e73\u5316"},r.a.createElement("span",{className:"icon icon-link"})),"\u6241\u5e73\u5316"),r.a.createElement(l.a,{code:"const objectFlat = obj => {\n  const res = {};\n\n  function flat(item, preKey = '') {\n    Object.entries(item).forEach(([key, val]) => {\n      const newKey = preKey ? `${preKey}.${key}` : key;\n\n      if (val && Object.prototype.toString.call(val) === '[object Object]') {\n        flat(val, newKey);\n      } else {\n        res[newKey] = val;\n      }\n    });\n  }\n\n  flat(obj);\n\n  return res;\n};\n",lang:"js"})))}}}]);